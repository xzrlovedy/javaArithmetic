（1）设计模式（Design Pattern）是前辈们对代码开发经验的总结，是解决特定问题的一系列套路。
（2）它不是语法规定，而是一套用来提高代码可复用性、可维护性、可读性、稳健性以及安全性的解决方案。
（3）当然，软件设计模式只是一个引导，在实际的软件开发中，必须根据具体的需求来选择：
    对于简单的程序，可能写一个简单的算法要比引入某种设计模式更加容易；
    但是对于大型项目开发或者框架设计，用设计模式来组织代码显然更好。
（4）根据模式是用来完成什么工作来划分，这种方式可分为创建型模式、结构型模式和行为型模式 3 种。
   创建型模式：用于描述“怎样创建对象”，它的主要特点是“将对象的创建与使用分离”。
               GoF 中提供了单例、原型、工厂方法、抽象工厂、建造者等 5 种创建型模式。
   结构型模式：用于描述如何将类或对象按某种布局组成更大的结构，
               GoF 中提供了代理、适配器、桥接、装饰、外观、享元、组合等 7 种结构型模式。
   行为型模式：用于描述类或对象之间怎样相互协作共同完成单个对象都无法单独完成的任务，以及怎样分配职责。
               GoF 中提供了模板方法、策略、命令、职责链、状态、观察者、中介者、迭代器、访问者、备忘录、解释器等 11 种行为型模式。
（5）本项目仅供学习使用，详情链接：http://c.biancheng.net/design_pattern/